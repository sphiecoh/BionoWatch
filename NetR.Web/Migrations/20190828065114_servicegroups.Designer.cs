// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetR.Web.Infrastructure;

namespace NetR.Web.Migrations
{
    [DbContext(typeof(BionoContext))]
    [Migration("20190828065114_servicegroups")]
    partial class servicegroups
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("NetR.Web.Infrastructure.Entities.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("NetR.Web.Infrastructure.Entities.EmailNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.HasKey("Id");

                    b.ToTable("EmailNotification");
                });

            modelBuilder.Entity("NetR.Web.Infrastructure.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("NetR.Web.Infrastructure.Entities.NotificationGroup", b =>
                {
                    b.Property<int>("GroupId");

                    b.Property<int>("EmailNotificationId");

                    b.HasKey("GroupId", "EmailNotificationId");

                    b.HasIndex("EmailNotificationId");

                    b.ToTable("NotificationGroups");
                });

            modelBuilder.Entity("NetR.Web.Infrastructure.Entities.ServiceConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Enabled");

                    b.Property<string>("ResponsibleServer");

                    b.Property<string>("ServerName");

                    b.Property<string>("ServiceName");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("ServiceConfiguration");
                });

            modelBuilder.Entity("NetR.Web.Infrastructure.Entities.ServiceGroup", b =>
                {
                    b.Property<int>("GroupId");

                    b.Property<int>("ServiceId");

                    b.HasKey("GroupId", "ServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceGroups");
                });

            modelBuilder.Entity("NetR.Web.Infrastructure.Entities.NotificationGroup", b =>
                {
                    b.HasOne("NetR.Web.Infrastructure.Entities.EmailNotification", "EmailNotification")
                        .WithMany("NotificationGroups")
                        .HasForeignKey("EmailNotificationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NetR.Web.Infrastructure.Entities.Group", "Group")
                        .WithMany("NotificationGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NetR.Web.Infrastructure.Entities.ServiceGroup", b =>
                {
                    b.HasOne("NetR.Web.Infrastructure.Entities.Group", "Group")
                        .WithMany("ServiceGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NetR.Web.Infrastructure.Entities.ServiceConfiguration", "Service")
                        .WithMany("ServiceGroups")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
